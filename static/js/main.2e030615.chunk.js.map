{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","console","log","sort","prevGood","nextGood","LENGTH","length","ALPABET","localeCompare","reverse","App","useState","NONE","handleSortType","handleReverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAqBzB,OAjBAI,QAAQC,IAAIJ,EAAUC,GAEtBC,EAAaG,MAAK,SAACC,EAAUC,GAC3B,OAAQP,GACN,KAAKJ,EAASY,OACZ,OAAOF,EAASG,OAASF,EAASE,OACpC,KAAKb,EAASc,QACZ,OAAOJ,EAASK,cAAcJ,GAChC,QACE,OAAO,MAITN,GACFC,EAAaU,UAGRV,G,SArCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAMiB,EAAuB,WAClC,MAAmCC,mBAASlB,EAASmB,MAArD,mBAAOf,EAAP,KAAiBgB,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOb,EAAP,KAAmBgB,EAAnB,KAOA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACElB,IAAaJ,EAASc,QAClB,0BACA,iBAENU,QAAS,kBAAMJ,EAAepB,EAASc,UAPzC,iCAYA,wBACES,KAAK,SACLD,UACElB,IAAaJ,EAASY,OAClB,6BACA,oBAENY,QAAS,kBAAMJ,EAAepB,EAASY,SAPzC,4BAYA,wBACEW,KAAK,SACLD,WACiB,IAAfjB,EACI,6BACA,oBAENmB,QAAS,kBAAMH,GAA6B,IAAfhB,IAP/B,qBAYA,wBACEkB,KAAK,SACLD,UAAU,4BAFZ,oBAMElB,IAAaJ,EAASmB,OAAuB,IAAfd,IAE5B,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAtDnBJ,EAAepB,EAASmB,WACxBE,GAAc,IAkDN,sBAUN,6BACE,6BACGnB,EAAkBD,EAAiB,CAAEI,aAAYD,aAC/CqB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,eC7H7CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2e030615.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((prevGood, nextGood) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return prevGood.length - nextGood.length;\n      case SortType.ALPABET:\n        return prevGood.localeCompare(nextGood);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype Props = {};\n\nexport const App: React.FC<Props> = () => {\n  const [sortType, handleSortType] = useState(SortType.NONE);\n  const [isReversed, handleReverse] = useState(false);\n\n  const reset = () => {\n    handleSortType(SortType.NONE);\n    handleReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortType !== SortType.ALPABET\n              ? 'button is-info is-light'\n              : 'button is-info'\n          }\n          onClick={() => handleSortType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sortType !== SortType.LENGTH\n              ? 'button is-success is-light'\n              : 'button is-success'\n          }\n          onClick={() => handleSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            isReversed !== true\n              ? 'button is-warning is-light'\n              : 'button is-warning'\n          }\n          onClick={() => handleReverse(isReversed !== true)}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n        >\n          Reset\n        </button>\n        {(sortType !== SortType.NONE || isReversed === true)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => reset()}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { isReversed, sortType })\n            .map(good => <li data-cy=\"Good\">{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}